package com.example.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.beans.Country;
import com.example.demo.services.CountryService;


@RestController
public class CountryController {
	
	//dependency injection
	@Autowired
	CountryService countryService;
	
	@GetMapping("/getcountries")
	public List<Country> getCountries() {
		return countryService.getCountries();
	} 
	
	@GetMapping("/getcountries/{id}")
	public  ResponseEntity<Country> getCountryById(@PathVariable(value="id") int id) {
		
		try {
		Country country= countryService.getCountryById(id);
		return new ResponseEntity<Country>(country,HttpStatus.OK);
		}
		catch(Exception e){
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}
	
	@GetMapping("/getcountries/countryname")
	public Country getCountryByName(@RequestParam(value="name") String name) {
		return countryService.getCountryByName(name);
	}
	
	@PostMapping("/addCountry")
	public Country addCountry(@RequestBody Country country) {
		return countryService.addCountry(country);
	}
	
	@PutMapping("/updateCountry")
	public Country updateCountry(@PathVariable(value="id") int id,@RequestBody Country country) {
		Country previousCountry=countryService.getCountryById(id);
		previousCountry.setCountryCapital(country.getCountryCapital());
		previousCountry.setCountryName(country.getCountryName());
		countryService.updateCountry(previousCountry);
		return country;
	}
	
	@DeleteMapping("/deleteCountry/{id}")
	public AddResponse deleteCountry(@PathVariable(value="id") int id) {
		return countryService.deleteCountry(id);
	}

}
